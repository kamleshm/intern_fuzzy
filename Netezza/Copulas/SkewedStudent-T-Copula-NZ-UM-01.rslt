--INFO: Reading startup configuration from file PulsarLogOn.act_ssl_config
-- Fuzzy Logix, LLC: Functional Testing Script for DB Lytix functions on Netezza
--
-- Copyright (c): 2016 Fuzzy Logix, LLC
--
-- The intellectual and technical concepts contained herein are proprietary to Fuzzy Logix, LLC.
-- and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade
-- secret or copyright law. Dissemination of this information or reproduction of this material is
-- strictly forbidden unless prior written permission is obtained from Fuzzy Logix, LLC.
-- Functional Test Specifications:
--
--      Test Category:              Copulas – Multivariate Distributions
--
--      Last Updated:                   05-30-2017
--
--      Author:                         <kamlesh.meena@fuzzyl.com>
--
-- BEGIN: TEST(s)
-----****************************************************************
---Skewed Student’s T Copula
-----****************************************************************
-----------------------------------------------------------------------------------
/******************************************************************/
/**************** First truncate all the tables *******************/
/******************************************************************/
TRUNCATE TABLE tblSimUncorr;
TRUNCATE TABLE
TRUNCATE TABLE tblCholesky;
TRUNCATE TABLE
TRUNCATE TABLE tblSimCorr;
TRUNCATE TABLE
TRUNCATE TABLE tblInvGamma;
TRUNCATE TABLE
/******************************************************************/
/******** Generate uncorrelated standard normal variates **********/
/******************************************************************/
INSERT INTO tblSimUncorr
SELECT a.SerialVal AS TrialID,
       b.SerialVal AS DrawID,
       c.SerialVal AS SeriesID,
       FLSimNormal(RANDOM(), 0, 1)
FROM   fzzlSerial a,
       fzzlSerial b,
       fzzlSerial c
WHERE  a.SerialVal <= 10000   ---- number of trials
AND    b.SerialVal <= 1000    ---- number of draws
AND    c.SerialVal <= 4       ---- number of variates
ORDER BY 1, 2, 3;
INSERT 0 40000000
/******************************************************************/
/************** Generate Inverse Gamma Distribution ***************/
/******************************************************************/
INSERT INTO tblInvGamma
SELECT a.SerialVal AS TrialID,
       b.SerialVal AS DrawID,
       FLSimInvGamma(RANDOM(), 5.5, 5.5) ---- degrees of freedom is 11
FROM   fzzlSerial a,
       fzzlSerial b
WHERE  a.SerialVal <= 10000
AND    b.SerialVal <= 1000;
INSERT 0 10000000
/******************************************************************/
/**************** Perform Cholesky decomposition ******************/
/******************************************************************/
INSERT INTO tblCholesky
SELECT FLMatrixRow(p.CholeskyStr) AS Row,
FLMatrixCol(p.CholeskyStr) AS Col,
FLMatrixVal(p.CholeskyStr) AS Value
FROM (
SELECT FLCholeskyStr(a.seriesid1, a.seriesid2, a.Correl)
OVER (PARTITION BY 1) AS CholeskyStr
FROM tbldistCorrel a
WHERE a.seriesid1 <= 4 ---- Limit rows and columns
AND a.seriesid2 <= 4 ---- to match the number of variates
) AS p
ORDER BY 1, 2;
INSERT 0 9
/******************************************************************/
/***************Generate Skewed Student's T Copula ***************/
/******************************************************************/
INSERT INTO tblSimCorr
SELECT p.TrialID,
       p.DrawID,
       p.SeriesID,
       FLSimSkewTCopulaObs(q.Mean, q.StdDev, q.Skewness, 11, p.SimValue, r.SimValue)
FROM   (
       SELECT a.TrialID,
              a.DrawID,
              b.Row AS SeriesID,
              FLSumProd(b.Value, a.SimValue) AS SimValue
       FROM   tblSimUncorr a,
              tblCholesky b
       WHERE  b.Col    = a.SeriesID
       GROUP BY a.TrialID, a.DrawID, b.Row
       ) AS p,
       tblDistParams q,
       tblInvGamma r
WHERE  q.SeriesID = p.SeriesID
AND    r.TrialID  = p.TrialID
AND    r.DrawID   = p.DrawID;
INSERT 0 0
SELECT  *
FROM    tblSimUncorr
LIMIT 20;
 TRIALID | DRAWID | SERIESID | SIMVALUE 
---------+--------+----------+----------
(0 rows)

SELECT  *
FROM    tblCholesky
LIMIT 20;
 ROW | COL |      VALUE       
-----+-----+------------------
   2 |   1 |              0.7
   2 |   2 | 0.71414284285428
   2 |   3 |                0
   1 |   1 |                1
   1 |   2 |                0
   1 |   3 |                0
   3 |   1 |              0.5
   3 |   2 | -0.0700140042014
   3 |   3 | 0.86319061580608
(9 rows)

SELECT  *
FROM    tblSimCorr
LIMIT 20;
 TRIALID | DRAWID | SERIESID | SIMVALUE 
---------+--------+----------+----------
(0 rows)

SELECT  *
FROM    tblInvGamma
LIMIT 20;
 TRIALID | DRAWID |     SIMVALUE     
---------+--------+------------------
       1 |      1 |  1.2161653958834
       3 |      1 |  1.1991999699519
       5 |      1 |   1.157470703125
       7 |      1 |  1.3602294921875
       9 |      1 |  2.2467698317308
      11 |      1 | 0.54144756610577
      13 |      1 |  2.3369422325721
      15 |      1 | 0.91169151893029
      17 |      1 | 0.79308847280649
      19 |      1 |  1.4852623572716
      21 |      1 | 0.78021592360276
      23 |      1 |  2.1271597055288
      25 |      1 |  2.0455087515024
      27 |      1 | 0.97493098332332
      29 |      1 |      2.943359375
      31 |      1 | 0.61233051006611
      33 |      1 |   1.913581261268
      35 |      1 |  1.4304410494291
      37 |      1 | 0.91615882286659
      39 |      1 | 0.73797020545373
(20 rows)

-- END: TEST (s)
\time
Query time printout on
--END: TEST SCRIPT
